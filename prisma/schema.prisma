generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime  @default(now())
  accounts      Account[]
  sessions      Session[]
  tasks         Task[]
  workSessions  WorkSession[]
}

model Task {
  id           String   @id @default(cuid())
  title        String
  description  String?
  estimatedHours Float
  remainingHours Float
  targetDate   DateTime
  completed    Boolean  @default(false)
  tags         String[] @default([])
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  workSessions WorkSession[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model WorkSession {
  id        String   @id @default(cuid())
  taskId    String
  userId    String
  startTime DateTime
  endTime   DateTime?
  duration  Float    @default(0)
  task      Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}